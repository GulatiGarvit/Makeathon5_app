
name: Build Test

# 1
on:
  # 2
  push:
    branches: [ "master", "main"]
  pull_request:
    branches: [ "master", "main"]

  # 3
  workflow_dispatch:

# 4
jobs:
  # 5
  build:
    # 6
    runs-on: ubuntu-latest

    # 7
    steps:
      # 8
      - uses: actions/checkout@v3
      # 9
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: "12.x"
          cache: 'gradle' 
          
      - name: Cache Flutter dependencies
        uses: actions/cache@v3
        with:
          path: /opt/hostedtoolcache/flutter
          key: ${{ runner.OS }}-flutter-install-cache-${{ env.flutter_version }}    
      # 10   
      - uses: subosito/flutter-action@v2
        with:
          # 11
          flutter-version: "3.x"
          channel: 'stable'
          cache: true
      # 12
      - name: Get dependencies
        run: flutter pub get
        
      - name: Create google-services.json
        run: cat /home/runner/work/Makeathon5_app/Makeathon5_app/app/google-services.json | base64
   
      - name: Putting data into google-services.json
        env:
          GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: echo $GOOGLE_SERVICES_JSON | base64 -di > ./android/app/google-services.json  
        
      - name: Create firebase_options.dart
        run: cat /home/runner/work/Makeathon5_app/Makeathon5_app/lib/firebase_options.dart | base64  
      
      - name: Putting data into firebase_options.dart
        env:
            FIREBASE_OPTIONS: ${{ secrets.FIREBASE_OPTIONS }}
        run: echo $FIREBASE_OPTIONS | base64 -di > ./lib/firebase_options.dart  

      # Runs a set of commands using the runners shell
      - name: Start release build
        run: flutter build apk
      - uses: actions/upload-artifact@v1
        with:
          name: release-apk
          path: build/app/outputs/apk/release/app-release.apk
